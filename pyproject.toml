# pyproject.toml

[tool.poetry]
name = "chatline"
version = "0.0.5"
authors = ["Alex Basile <basileaw@gmail.com>"]
description = "A pretty command line interface for LLM chat."
readme = "README.md"
license = "MIT"

[[tool.poetry.packages]]
include = "chatline"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
boto3 = "*"
httpx = "*"
rich = "*"
prompt-toolkit = "*"

[tool.poetry.group.dev.dependencies]
fastapi = "*"
uvicorn = "*"
poethepoet = "*"

[tool.poe.tasks]
embedded-client = "python example/client.py"
embedded-client-log = "python example/client.py --enable-logging --log-file logs/chatline_debug.log"
serve = "python example/server.py"
remote-client = "python example/client.py -e http://127.0.0.1:8000/chat"
remote-client-log = "python example/client.py -e http://127.0.0.1:8000/chat --enable-logging --log-file logs/chatline_debug.log"
remote-same-origin = "python example/client.py --same-origin"
remote-same-origin-log = "python example/client.py --same-origin --enable-logging --log-file logs/chatline_debug.log"

# Publish scripts
check-changes = "bash -c 'if [ ! -z \"$(git status --porcelain)\" ]; then echo \"Error: You have uncommitted changes.\"; exit 1; fi'"

publish-patch = """
bash -c '
  poe check-changes && \
  git pull origin main && \
  VERSION=$(poetry version -s) && \
  if git rev-parse "v$VERSION" >/dev/null 2>&1; then \
    echo "Error: Tag v$VERSION already exists" && exit 1; \
  fi && \
  poetry version patch && \
  VERSION=$(poetry version -s) && \
  poetry build && \
  poetry publish && \
  git add pyproject.toml && \
  git commit -m "release v$VERSION" && \
  git tag v$VERSION && \
  git push origin main && \
  git push origin --tags
'
"""

publish-minor = """
bash -c '
  poe check-changes && \
  git pull origin main && \
  VERSION=$(poetry version -s) && \
  if git rev-parse "v$VERSION" >/dev/null 2>&1; then \
    echo "Error: Tag v$VERSION already exists" && exit 1; \
  fi && \
  poetry version minor && \
  VERSION=$(poetry version -s) && \
  poetry build && \
  poetry publish && \
  git add pyproject.toml && \
  git commit -m "release v$VERSION" && \
  git tag v$VERSION && \
  git push origin main && \
  git push origin --tags
'
"""

publish-major = """
bash -c '
  poe check-changes && \
  git pull origin main && \
  VERSION=$(poetry version -s) && \
  if git rev-parse "v$VERSION" >/dev/null 2>&1; then \
    echo "Error: Tag v$VERSION already exists" && exit 1; \
  fi && \
  poetry version major && \
  VERSION=$(poetry version -s) && \
  poetry build && \
  poetry publish && \
  git add pyproject.toml && \
  git commit -m "release v$VERSION" && \
  git tag v$VERSION && \
  git push origin main && \
  git push origin --tags
'
"""
